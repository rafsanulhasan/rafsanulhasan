#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.
FROM nginx AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443
#COPY ["/default.conf", "/etc/nginx/conf.d/"]

FROM mcr.microsoft.com/dotnet/sdk:5.0-buster-slim AS build
WORKDIR /mkcert
RUN apt update -y && \
    apt-get update -y && \
    apt install libnss3-tools wget -y && \
    #wget https://github.com/FiloSottile/mkcert/archive/v1.4.2.tar.gz && \
    wget https://github.com/FiloSottile/mkcert/releases/download/v1.4.2/mkcert-v1.4.2-linux-arm && \
    #tar xzvf ./v1.4.2.tar.gz && \
    #cd mkcert-1.4.2/ && \
    #go build && \
    #mkdir /mkcert && \
    #cp bin/mkcert /mkcert
    mv mkcert-v1.4.2-linux-arm mkcert 
WORKDIR /src
COPY ["Applications/Web/SPA/Client/RH.Apps.Web.SPA.csproj", "Applications/Web/SPA/Client/"]
RUN dotnet restore "Applications/Web/SPA/Client/RH.Apps.Web.SPA.csproj"
COPY . .
WORKDIR "/src/Applications/Web/SPA/Client"
RUN dotnet build "RH.Apps.Web.SPA.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "RH.Apps.Web.SPA.csproj" -c Release -o /app/publish

#FROM base AS final
#WORKDIR /app
#COPY --from=publish /app/publish/www .
#ENTRYPOINT ["dotnet", "RH.Apps.Web.SPA.dll"]

FROM base AS final
WORKDIR /usr/bin
COPY --from=build /mkcert/mkcert .
RUN chmod 777 mkcert && \
    #mkcert --install && \
    mkcert -key-file /key.pem -cert-file /cert.pem localhost
WORKDIR /usr/share/nginx/html
COPY --from=publish /app/publish/wwwroot .
COPY ["Applications/Web/SPA/Client/nginx/default.conf", "/etc/nginx/conf.d/"]
COPY ["Applications/Web/SPA/Client/nginx/https.conf", "/etc/nginx/conf.d/"]
ENTRYPOINT ["nginx", "-g", "daemon off;"]