@page "/"
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.Hosting
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using RH.Apps.Web.SPA.Client

@inject IConfiguration Configuration
@inject IHostEnvironment HostEnvironment

@{
	var runtime = Configuration.GetSection("Runtime").Get<string>();
}

<!DOCTYPE html>
<html>

<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
	<title>Rafsanul Hasan</title>
	<base href="/" />

	<environment include="Development">
		<link href="libraries/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />		
	</environment>
	<environment include="Staging,Production">
		<link href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
	</environment>
	<environment include="Development,Staging,Production">		
		<link href="styles/app.css" rel="stylesheet" />
		@if (runtime == "Client")
		{
		<link href="RH.Apps.Web.SPA.Client.styles.css" rel="stylesheet" />
		<link href="manifest.json" rel="manifest" />
		}
		<link rel="apple-touch-icon" sizes="512x512" href="icon-512.png" />
	</environment>	
	
</head>

<body>

	@if (runtime == "Client")
	{
	<component id="app" type="@typeof(App)" render-mode="WebAssembly" />
	}
	else if (runtime == "Server")
	{
	<component type="@typeof(App)" render-mode="ServerPrerendered" />
	<div id="blazor-error-ui">
		An unhandled error has occurred.
		<a href="" class="reload">Reload</a>
		<a class="dismiss">🗙</a>
	</div>
	}

	<environment include="Development">
	@if (runtime == "Client")
	{
		<script src="scripts/decode.js"></script>
	}	 
	</environment>

	<environment include="Staging,Production">
	@if (runtime == "Client")
	{
		<script src="scripts/decode.min.js"></script>
	}
	</environment>

	<environment include="Development,Staging,Production">
	@if (runtime == "Client")
	{
		<script src="_content/Microsoft.AspNetCore.Components.WebAssembly.Authentication/AuthenticationService.js"></script>
		<script src="_framework/blazor.webassembly.js"></script>
		
		<script>
			Blazor.start({
				loadBootResource: function (type, name, defaultUri, integrity) {
					if (type !== 'dotnetjs' && type !== 'dotnetwasm' && type !== 'timezonedata') {
						return (async function () {
							const response = await fetch(defaultUri + '.br', { cache: 'no-cache' });
							if (!response.ok) {
								throw new Error(response.statusText);
							}
							const originalResponseBuffer = await response.arrayBuffer();
							const originalResponseArray = new Int8Array(originalResponseBuffer);
							const decompressedResponseArray = BrotliDecode(originalResponseArray);
							const contentType = type === 'dotnetwasm'
										   ? 'application/wasm'
										   : 'application/octet-stream';
							return new Response(
								decompressedResponseArray,
								{ headers: { 'content-type': contentType } }
							);
						});
					}
					switch (type) {
						case 'dotnetjs':
						case 'dotnetwasm':
						case 'timezonedata':
						return `https://my-awesome-cdn.com/blazorwebassembly/5.0.102/${name}`;
					}
				})
			})();
		</script>
	}
	else if (runtime == "Server")
	{
	<script src="_framework/blazor.server.js"></script>
	}
	</environment>

  

</body>

</html>
