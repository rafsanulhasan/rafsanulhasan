@page "/"
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@using Microsoft.Extensions.Configuration
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using RH.Apps.Web.SPA.Client

@inject IConfiguration Configuration

@{
     var runtime = Configuration.GetSection("Runtime").Get<string>();
}

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title>Rafsanul Hasan</title>
    <base href="/" />
    <link href="libraries/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="styles/app.css" rel="stylesheet" />
    
    @if (runtime == "Client") 
    {
          <link href="RH.Apps.Web.SPA.Client.styles.css" rel="stylesheet" />
          <link href="manifest.json" rel="manifest" />
    }
    <link rel="apple-touch-icon" sizes="512x512" href="icon-512.png" />
</head>

<body>

     @if (runtime == "Client") 
     {
          <component id="app" type="@typeof(App)" render-mode="WebAssembly" />
     }
     else if (runtime == "Server")
     {
         <component type="@typeof(App)" render-mode="ServerPrerendered" />         

         <div id="blazor-error-ui">
             An unhandled error has occurred.
             <a href="" class="reload">Reload</a>
             <a class="dismiss">🗙</a>
         </div>
     }
    
    @if (runtime == "Client") 
    {
    <script src="_content/Microsoft.AspNetCore.Components.WebAssembly.Authentication/AuthenticationService.js"></script>
    <script src="_framework/blazor.webassembly.js"></script>
    <script>navigator.serviceWorker.register('service-worker.js');</script>
    }
    else if (runtime == "Server") 
    {
    <script src="_framework/blazor.server.js"></script>
    }
    
</body>

</html>
